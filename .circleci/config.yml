aliases:
  - &setup-env
    name: Setup Envionrment
    shell: /bin/bash
    command: source .circleci/ci-helper.sh && envSetup

  - &determine-tests-to-run
    name: Determine Tests to Run
    shell: /bin/bash
    command: source .circleci/ci-helper.sh && printTestsToRun

  - &run-danger
    name:  Run Danger
    when: always
    command:  source .circleci/ci-helper.sh && runDanger

  - &launch-emulator
    name:  Launch Emulator
    command: source .circleci/ci-helper.sh && startAVD
    background: true

  - &wait-for-emulator
    name:  Wait for Emulator to boot
    command: source .circleci/ci-helper.sh && waitForAVD

  - &run-unit-tests
    halt_build_on_fail: false
    no_output_timeout: 900
    command: source .circleci/ci-helper.sh && runTests

  - &android-lint
    name: Run Android Lint
    command:  ./gradlew lint
    when: always

  - &capture-logcat
    name: Capture Logcat
    command: adb logcat *:v > logcat.txt
    background: true

  - &gradle-cache-key
    gradle-cache-v2-{{ checksum "build.gradle" }}-{{
      checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{
      checksum "libs/SalesforceAnalytics/build.gradle" }}-{{
      checksum "libs/SalesforceSDK/build.gradle" }}-{{
      checksum "libs/SmartStore/build.gradle" }}-{{
      checksum "libs/SmartSync/build.gradle" }}-{{
      checksum "libs/SalesforceHybrid/build.gradle" }}-{{
      checksum "libs/SalesforceReact/build.gradle" }}

  - &restore-gradle-cache
    keys:
      - *gradle-cache-key

  - &restore-node-cache
    keys:
      - node-cache-{{ checksum "package.json" }}

  - &restore-ruby-cache
    keys:
      - ruby-gem-cache-{{ .BuildNum }}
      - ruby-gem-cache-

  - &save-gradle-cache
    key: *gradle-cache-key
    paths:
      - .gradle
      - /home/circleci/.gradle

  - &save-node-cache
    key: node-cache-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &save-ruby-cache
    key: ruby-gem-cache-{{ .BuildNum }}
    paths:
      - /home/circleci/.rubies

  - &codecov
    name: Codecov
    command: bash <(curl -s https://codecov.io/bash)
    when: always
    
  - &attach_workspace
    attach_workspace:
      at: ~/SalesforceMobileSDK-Android

defaults: &defaults
  working_directory: ~/SalesforceMobileSDK-Android
  docker:
    - image: circleci/android:api-28-node8-alpha
  environment:
    - TERM: "dumb"
    - ADB_INSTALL_TIMEOUT: 15
    - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    - GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
    - ANDROID_NDK: '/opt/ndk/android-ndk-r10e'
    - BUILD_THREADS: 2


#########################
#                       #
#        PR Jobs        #
#                       #
#########################

version: 2
jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run: *determine-tests-to-run
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - restore_cache: *restore-ruby-cache
      - run: *setup-env
      - run: *android-lint
      - save_cache: *save-gradle-cache
      - save_cache: *save-node-cache
      - save_cache: *save-ruby-cache
      - run: *run-danger
      - persist_to_workspace:
          root: .
          paths:
            - ./**

  test-SalesforceHybrid-firebase:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceAnalytics"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run:
          name: Store Google Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
      - run:
          name: Authorize gcloud and set config defaults
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project mobile-apps-firebase-test
      - run:
          name: Build for Testing
          command:  |
            ./gradlew :libs:SalesforceHybrid:assembleAndroidtest
            ./gradlew :hybrid:HybridSampleApps:SmartSyncExplorerHybrid:assembleAndroidTest
      - run:
          name: Test
          command: 
            gcloud firebase test android run \
              --project mobile-apps-firebase-test \
              --type instrumentation \
              --app ./hybrid/HybridSampleApps/SmartSyncExplorerHybrid/build/outputs/apk/androidTest/debug/SmartSyncExplorerHybrid-debug-androidTest.apk \
              --test ./libs/SalesforceHybrid/build/outputs/apk/androidTest/debug/SalesforceHybrid-debug-androidTest.apk  \
              --device model=NexusLowRes,version=26,locale=en,orientation=portrait  \
              --environment-variables coverage=true,coverageFile=/sdcard/tmp/code-coverage/connected/coverage.ec  \
              --directories-to-pull=/sdcard/tmp  \
              --timeout 15m
          no_output_timeout: 900
     # - run:
     #     name: Install gsutil dependency and copy test results data
     #     command: |
     #       sudo pip install -U crcmod
     #       sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true
     # - run:
     #     name: Copy Coverage Results
     #     command: mkdir -p libs/SalesforceHybrid/build/outputs/code-coverage/connected && cp firebase/Nexus6P-27-en_US-portrait/artifacts/coverage.ec libs/SalesforceHybrid/build/outputs/code-coverage/connected/coverage.ec
     #     when: always
      - store_artifacts:
          path: firebase/
          destination: SalesforceHybrid-Firebase
      - store_test_results:
          path: firebase/

  test-SalesforceAnalytics:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceAnalytics"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SalesforceAnalytics/build/reports/
          destination: SalesforceAnalytics
      - store_test_results:
          path: libs/SalesforceAnalytics/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SalesforceAnalytics
      - run: *run-danger
      - run: *codecov

  test-SalesforceSDK:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceSDK"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SalesforceSDK/build/reports/
          destination: SalesforceSDK
      - store_test_results:
          path: libs/SalesforceSDK/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SalesforceSDK
      - run: *run-danger
      - run: *codecov

  test-SmartStore:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SmartStore"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SmartStore/build/reports/
          destination: SmartStore
      - store_test_results:
          path: libs/SmartStore/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SmartStore
      - run: *run-danger
      - run: *codecov

  test-SmartSync:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SmartSync"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SmartSync/build/reports/
          destination: SmartSync
      - store_test_results:
          path: libs/SmartSync/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SmartSync
      - run: *run-danger
      - run: *codecov

  test-SalesforceHybrid:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceHybrid"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SalesforceHybrid/build/reports/
          destination: SalesforceHybrid
      - store_test_results:
          path: libs/SalesforceHybrid/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SalesforceHybrid
      - run: *run-danger
      - run: *codecov

  test-RestExplorer:
    <<: *defaults
    environment:
      - CURRENT_LIB: "RestExplorer"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: native/NativeSampleApps/RestExplorer/build/reports/
          destination: RestExplorer
      - store_test_results:
          path: native/NativeSampleApps/RestExplorer/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: RestExplorer
      - run: *run-danger
      - run: *codecov

  test-SalesforceReact:
    <<: *defaults
    environment:
      - CURRENT_LIB: "SalesforceReact"
    steps:
      - *attach_workspace
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-ruby-cache
      - run: *determine-tests-to-run
      - run: *launch-emulator
      - run: *wait-for-emulator
      - run: *capture-logcat
      - run: *run-unit-tests
      - save_cache: *save-gradle-cache
      - store_artifacts:
          path: libs/SalesforceReact/build/reports/
          destination: SalesforceReact
      - store_test_results:
          path: libs/SalesforceReact/build/outputs/androidTest-results/
      - store_artifacts:
          path: logcat.txt
          destination: SalesforceReact
      - run: *run-danger
      - run: *codecov


##########################
#                        #
#      Nightly Jobs      #
#                        #
##########################

  generate-artifacts:
    <<: *defaults
    steps:
      - checkout
      - restore_cache: *restore-gradle-cache
      - restore_cache: *restore-node-cache
      - run: *setup-env
      - save_cache: *save-node-cache
      - run: 
          name: Build Libraries
          command:  |
            ./gradlew :libs:SalesforceAnalytics:assemble
            ./gradlew :libs:SalesforceSDK:assemble
            ./gradlew :libs:SmartStore:assemble
            ./gradlew :libs:SmartSync:assemble
            ./gradlew :libs:SalesforceHybrid:assemble
            ./gradlew :libs:SalesforceReact:assemble
          when: always
      - store_artifacts:
          path: libs/SalesforceAnalytics/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceSDK/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SmartStore/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SmartSync/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceHybrid/build/outputs/aar/
          destination: libraries
      - store_artifacts:
          path: libs/SalesforceReact/build/outputs/aar/
          destination: libraries
      - run:
          name: Build Native Sample Apps
          when: always
          command:  |
            ./gradlew :native:NativeSampleApps:AppConfigurator:assemble
            ./gradlew :native:NativeSampleApps:ConfiguredApp:assemble
            ./gradlew :native:NativeSampleApps:RestExplorer:assemble
            ./gradlew :native:NativeSampleApps:SmartSyncExplorer:assemble
      - store_artifacts:
          path: native/NativeSampleApps/AppConfigurator/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/ConfiguredApp/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/RestExplorer/build/outputs/apk/
          destination: native-apps
      - store_artifacts:
          path: native/NativeSampleApps/SmartSyncExplorer/build/outputs/apk/
          destination: native-apps
      - run:
          name: Build Hybrid Sample Apps
          when: always
          command:  |
            ./gradlew :hybrid:HybridSampleApps:AccountEditor:assemble
            ./gradlew :hybrid:HybridSampleApps:NoteSync:assemble
            ./gradlew :hybrid:HybridSampleApps:SmartSyncExplorerHybrid:assemble
      - store_artifacts:
          path: hybrid/HybridSampleApps/AccountEditor/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/NoteSync/build/outputs/apk/
          destination: hybrid-apps
      - store_artifacts:
          path: hybrid/HybridSampleApps/SmartSyncExplorerHybrid/build/outputs/apk/
          destination: hybrid-apps
      - save_cache: *save-gradle-cache


#####################
#                   #
#     Workflows     #
#                   #
#####################

workflows:
  version: 2

  nightly-test:
     jobs:
        - setup
        - test-SalesforceHybrid-firebase:
            context: nightly-test
            requires:
                - setup